<h3></h3>

<div class="well">
    {{ form_start(form, {'attr': {'class': 'form-horizontal', 'novalidate': 'novalidate'}}) }}


    {{ form_row(form.tickets) }}

    <a href="#" id="add_ticket" class="btn btn-info">Ajouter un billet</a>

    <div class="form-group">
        {# Génération du label. #}
        {{ form_label(form.bookedat, "Commande effectué le ", {'label_attr': {'class': 'col-sm-6 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.bookedat) }}

        <div class="col-sm-10">
            {# Génération de l'input. #}
            {{ form_widget(form.bookedat, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    <div class="form-group">
        {# Génération du label. #}
        {{ form_label(form.ticketsnbr, "Merci de confirmer le nombre de billets réservés ", {'label_attr': {'class': 'col-sm-6 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.ticketsnbr) }}

        <div class="col-sm-10">
            {# Génération de l'input. #}
            {{ form_widget(form.ticketsnbr, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    <div class="form-group">
        {# Génération du label. #}
        {{ form_label(form.mail, "Merci d'indiquer votre adresse mail", {'label_attr': {'class': 'col-sm-6 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.mail) }}

        <div class="col-sm-10">
            {# Génération de l'input. #}
            {{ form_widget(form.mail, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    {# ... #}
    {# Génération automatique des champs pas encore écrits.
       Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
       et tous les champs cachés (type « hidden »). #}
    {{ form_rest(form) }}


    {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
    {{ form_widget(form.Reservation, {'attr': {'class': 'btn btn-success'}}) }}





    {# Fermeture de la balise <form> du formulaire HTML #}
    {{ form_end(form) }}

</div>


{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#sa_museumbundle_booking_tickets');

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_ticket').click(function(e) {
            addTicket($container);

            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });

        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
        if (index == 0) {
            addTicket($container);
        } else {
            // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
            $container.children('div').each(function() {
                addDeleteLink($(this));
            });
        }

        // La fonction qui ajoute un formulaire TicketType
        function addTicket($container) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            var template = $container.attr('data-prototype')
                .replace(/__name__label__/g, 'Billet n°' + (index+1))
                .replace(/__name__/g,        index)
            ;

            // On crée un objet jquery qui contient ce template
            var $prototype = $(template);

            // On ajoute au prototype un lien pour pouvoir supprimer le billet
            addDeleteLink($prototype);

            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);

            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }

        // La fonction qui ajoute un lien de suppression d'un billet
        function addDeleteLink($prototype) {
            // Création du lien
            var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

            // Ajout du lien
            $prototype.append($deleteLink);

            // Ajout du listener sur le clic du lien pour effectivement supprimer le billet
            $deleteLink.click(function(e) {
                $prototype.remove();

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>